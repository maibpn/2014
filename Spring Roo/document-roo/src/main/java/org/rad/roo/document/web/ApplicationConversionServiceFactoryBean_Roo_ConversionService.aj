// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.rad.roo.document.web;

import org.rad.roo.document.domain.Description;
import org.rad.roo.document.domain.Document;
import org.rad.roo.document.domain.DocumentClassification;
import org.rad.roo.document.domain.DocumentId;
import org.rad.roo.document.domain.DocumentRelationship;
import org.rad.roo.document.domain.DocumentRevision;
import org.rad.roo.document.domain.ElectronicAddress;
import org.rad.roo.document.domain.KeyWord;
import org.rad.roo.document.domain.Person;
import org.rad.roo.document.domain.PostalAddress;
import org.rad.roo.document.domain.StreetDetail;
import org.rad.roo.document.domain.Summary;
import org.rad.roo.document.domain.TelephoneNumber;
import org.rad.roo.document.domain.Title;
import org.rad.roo.document.domain.TownDetail;
import org.rad.roo.document.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Description, String> ApplicationConversionServiceFactoryBean.getDescriptionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.Description, java.lang.String>() {
            public String convert(Description description) {
                return new StringBuilder().append(description.getNumberOfPages()).append(' ').append(description.getSize()).append(' ').append(description.getComment()).toString();
            }
        };
    }
    
    public Converter<Long, Description> ApplicationConversionServiceFactoryBean.getIdToDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.Description>() {
            public org.rad.roo.document.domain.Description convert(java.lang.Long id) {
                return Description.findDescription(id);
            }
        };
    }
    
    public Converter<String, Description> ApplicationConversionServiceFactoryBean.getStringToDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.Description>() {
            public org.rad.roo.document.domain.Description convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Description.class);
            }
        };
    }
    
    public Converter<Document, String> ApplicationConversionServiceFactoryBean.getDocumentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.Document, java.lang.String>() {
            public String convert(Document document) {
                return new StringBuilder().append(document.getDocid()).toString();
            }
        };
    }
    
    public Converter<Long, Document> ApplicationConversionServiceFactoryBean.getIdToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.Document>() {
            public org.rad.roo.document.domain.Document convert(java.lang.Long id) {
                return Document.findDocument(id);
            }
        };
    }
    
    public Converter<String, Document> ApplicationConversionServiceFactoryBean.getStringToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.Document>() {
            public org.rad.roo.document.domain.Document convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Document.class);
            }
        };
    }
    
    public Converter<DocumentClassification, String> ApplicationConversionServiceFactoryBean.getDocumentClassificationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.DocumentClassification, java.lang.String>() {
            public String convert(DocumentClassification documentClassification) {
                return new StringBuilder().append(documentClassification.getClassId()).append(' ').append(documentClassification.getClassName()).append(' ').append(documentClassification.getClassificationSystem()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentClassification> ApplicationConversionServiceFactoryBean.getIdToDocumentClassificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.DocumentClassification>() {
            public org.rad.roo.document.domain.DocumentClassification convert(java.lang.Long id) {
                return DocumentClassification.findDocumentClassification(id);
            }
        };
    }
    
    public Converter<String, DocumentClassification> ApplicationConversionServiceFactoryBean.getStringToDocumentClassificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.DocumentClassification>() {
            public org.rad.roo.document.domain.DocumentClassification convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentClassification.class);
            }
        };
    }
    
    public Converter<DocumentId, String> ApplicationConversionServiceFactoryBean.getDocumentIdToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.DocumentId, java.lang.String>() {
            public String convert(DocumentId documentId) {
                return new StringBuilder().append(documentId.getDocumentId()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentId> ApplicationConversionServiceFactoryBean.getIdToDocumentIdConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.DocumentId>() {
            public org.rad.roo.document.domain.DocumentId convert(java.lang.Long id) {
                return DocumentId.findDocumentId(id);
            }
        };
    }
    
    public Converter<String, DocumentId> ApplicationConversionServiceFactoryBean.getStringToDocumentIdConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.DocumentId>() {
            public org.rad.roo.document.domain.DocumentId convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentId.class);
            }
        };
    }
    
    public Converter<DocumentRelationship, String> ApplicationConversionServiceFactoryBean.getDocumentRelationshipToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.DocumentRelationship, java.lang.String>() {
            public String convert(DocumentRelationship documentRelationship) {
                return new StringBuilder().append(documentRelationship.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentRelationship> ApplicationConversionServiceFactoryBean.getIdToDocumentRelationshipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.DocumentRelationship>() {
            public org.rad.roo.document.domain.DocumentRelationship convert(java.lang.Long id) {
                return DocumentRelationship.findDocumentRelationship(id);
            }
        };
    }
    
    public Converter<String, DocumentRelationship> ApplicationConversionServiceFactoryBean.getStringToDocumentRelationshipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.DocumentRelationship>() {
            public org.rad.roo.document.domain.DocumentRelationship convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentRelationship.class);
            }
        };
    }
    
    public Converter<DocumentRevision, String> ApplicationConversionServiceFactoryBean.getDocumentRevisionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.DocumentRevision, java.lang.String>() {
            public String convert(DocumentRevision documentRevision) {
                return new StringBuilder().append(documentRevision.getRevision()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentRevision> ApplicationConversionServiceFactoryBean.getIdToDocumentRevisionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.DocumentRevision>() {
            public org.rad.roo.document.domain.DocumentRevision convert(java.lang.Long id) {
                return DocumentRevision.findDocumentRevision(id);
            }
        };
    }
    
    public Converter<String, DocumentRevision> ApplicationConversionServiceFactoryBean.getStringToDocumentRevisionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.DocumentRevision>() {
            public org.rad.roo.document.domain.DocumentRevision convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentRevision.class);
            }
        };
    }
    
    public Converter<ElectronicAddress, String> ApplicationConversionServiceFactoryBean.getElectronicAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.ElectronicAddress, java.lang.String>() {
            public String convert(ElectronicAddress electronicAddress) {
                return new StringBuilder().append(electronicAddress.getEmail()).append(' ').append(electronicAddress.getWeb()).toString();
            }
        };
    }
    
    public Converter<Long, ElectronicAddress> ApplicationConversionServiceFactoryBean.getIdToElectronicAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.ElectronicAddress>() {
            public org.rad.roo.document.domain.ElectronicAddress convert(java.lang.Long id) {
                return ElectronicAddress.findElectronicAddress(id);
            }
        };
    }
    
    public Converter<String, ElectronicAddress> ApplicationConversionServiceFactoryBean.getStringToElectronicAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.ElectronicAddress>() {
            public org.rad.roo.document.domain.ElectronicAddress convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ElectronicAddress.class);
            }
        };
    }
    
    public Converter<KeyWord, String> ApplicationConversionServiceFactoryBean.getKeyWordToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.KeyWord, java.lang.String>() {
            public String convert(KeyWord keyWord) {
                return new StringBuilder().append(keyWord.getText()).toString();
            }
        };
    }
    
    public Converter<Long, KeyWord> ApplicationConversionServiceFactoryBean.getIdToKeyWordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.KeyWord>() {
            public org.rad.roo.document.domain.KeyWord convert(java.lang.Long id) {
                return KeyWord.findKeyWord(id);
            }
        };
    }
    
    public Converter<String, KeyWord> ApplicationConversionServiceFactoryBean.getStringToKeyWordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.KeyWord>() {
            public org.rad.roo.document.domain.KeyWord convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), KeyWord.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getId()).append(' ').append(person.getFirstName()).append(' ').append(person.getMName()).append(' ').append(person.getLastName()).toString();
            }
        };
    }
    
    public Converter<Long, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.Person>() {
            public org.rad.roo.document.domain.Person convert(java.lang.Long id) {
                return Person.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.Person>() {
            public org.rad.roo.document.domain.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Person.class);
            }
        };
    }
    
    public Converter<PostalAddress, String> ApplicationConversionServiceFactoryBean.getPostalAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.PostalAddress, java.lang.String>() {
            public String convert(PostalAddress postalAddress) {
                return new StringBuilder().append(postalAddress.getPostalCode()).toString();
            }
        };
    }
    
    public Converter<Long, PostalAddress> ApplicationConversionServiceFactoryBean.getIdToPostalAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.PostalAddress>() {
            public org.rad.roo.document.domain.PostalAddress convert(java.lang.Long id) {
                return PostalAddress.findPostalAddress(id);
            }
        };
    }
    
    public Converter<String, PostalAddress> ApplicationConversionServiceFactoryBean.getStringToPostalAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.PostalAddress>() {
            public org.rad.roo.document.domain.PostalAddress convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PostalAddress.class);
            }
        };
    }
    
    public Converter<StreetDetail, String> ApplicationConversionServiceFactoryBean.getStreetDetailToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.StreetDetail, java.lang.String>() {
            public String convert(StreetDetail streetDetail) {
                return new StringBuilder().append(streetDetail.getAddressGeneral()).append(' ').append(streetDetail.getBuildingName()).append(' ').append(streetDetail.getCode()).append(' ').append(streetDetail.getName()).toString();
            }
        };
    }
    
    public Converter<Long, StreetDetail> ApplicationConversionServiceFactoryBean.getIdToStreetDetailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.StreetDetail>() {
            public org.rad.roo.document.domain.StreetDetail convert(java.lang.Long id) {
                return StreetDetail.findStreetDetail(id);
            }
        };
    }
    
    public Converter<String, StreetDetail> ApplicationConversionServiceFactoryBean.getStringToStreetDetailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.StreetDetail>() {
            public org.rad.roo.document.domain.StreetDetail convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StreetDetail.class);
            }
        };
    }
    
    public Converter<Summary, String> ApplicationConversionServiceFactoryBean.getSummaryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.Summary, java.lang.String>() {
            public String convert(Summary summary) {
                return new StringBuilder().append(summary.getText()).toString();
            }
        };
    }
    
    public Converter<Long, Summary> ApplicationConversionServiceFactoryBean.getIdToSummaryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.Summary>() {
            public org.rad.roo.document.domain.Summary convert(java.lang.Long id) {
                return Summary.findSummary(id);
            }
        };
    }
    
    public Converter<String, Summary> ApplicationConversionServiceFactoryBean.getStringToSummaryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.Summary>() {
            public org.rad.roo.document.domain.Summary convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Summary.class);
            }
        };
    }
    
    public Converter<TelephoneNumber, String> ApplicationConversionServiceFactoryBean.getTelephoneNumberToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.TelephoneNumber, java.lang.String>() {
            public String convert(TelephoneNumber telephoneNumber) {
                return new StringBuilder().append(telephoneNumber.getAreaCode()).append(' ').append(telephoneNumber.getCityCode()).append(' ').append(telephoneNumber.getCountryCode()).append(' ').append(telephoneNumber.getExtension()).toString();
            }
        };
    }
    
    public Converter<Long, TelephoneNumber> ApplicationConversionServiceFactoryBean.getIdToTelephoneNumberConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.TelephoneNumber>() {
            public org.rad.roo.document.domain.TelephoneNumber convert(java.lang.Long id) {
                return TelephoneNumber.findTelephoneNumber(id);
            }
        };
    }
    
    public Converter<String, TelephoneNumber> ApplicationConversionServiceFactoryBean.getStringToTelephoneNumberConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.TelephoneNumber>() {
            public org.rad.roo.document.domain.TelephoneNumber convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TelephoneNumber.class);
            }
        };
    }
    
    public Converter<Title, String> ApplicationConversionServiceFactoryBean.getTitleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.Title, java.lang.String>() {
            public String convert(Title title) {
                return new StringBuilder().append(title.getText()).toString();
            }
        };
    }
    
    public Converter<Long, Title> ApplicationConversionServiceFactoryBean.getIdToTitleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.Title>() {
            public org.rad.roo.document.domain.Title convert(java.lang.Long id) {
                return Title.findTitle(id);
            }
        };
    }
    
    public Converter<String, Title> ApplicationConversionServiceFactoryBean.getStringToTitleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.Title>() {
            public org.rad.roo.document.domain.Title convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Title.class);
            }
        };
    }
    
    public Converter<TownDetail, String> ApplicationConversionServiceFactoryBean.getTownDetailToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.rad.roo.document.domain.TownDetail, java.lang.String>() {
            public String convert(TownDetail townDetail) {
                return new StringBuilder().append(townDetail.getCode()).append(' ').append(townDetail.getSec()).append(' ').append(townDetail.getStateOrProvince()).toString();
            }
        };
    }
    
    public Converter<Long, TownDetail> ApplicationConversionServiceFactoryBean.getIdToTownDetailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.rad.roo.document.domain.TownDetail>() {
            public org.rad.roo.document.domain.TownDetail convert(java.lang.Long id) {
                return TownDetail.findTownDetail(id);
            }
        };
    }
    
    public Converter<String, TownDetail> ApplicationConversionServiceFactoryBean.getStringToTownDetailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.rad.roo.document.domain.TownDetail>() {
            public org.rad.roo.document.domain.TownDetail convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TownDetail.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDescriptionToStringConverter());
        registry.addConverter(getIdToDescriptionConverter());
        registry.addConverter(getStringToDescriptionConverter());
        registry.addConverter(getDocumentToStringConverter());
        registry.addConverter(getIdToDocumentConverter());
        registry.addConverter(getStringToDocumentConverter());
        registry.addConverter(getDocumentClassificationToStringConverter());
        registry.addConverter(getIdToDocumentClassificationConverter());
        registry.addConverter(getStringToDocumentClassificationConverter());
        registry.addConverter(getDocumentIdToStringConverter());
        registry.addConverter(getIdToDocumentIdConverter());
        registry.addConverter(getStringToDocumentIdConverter());
        registry.addConverter(getDocumentRelationshipToStringConverter());
        registry.addConverter(getIdToDocumentRelationshipConverter());
        registry.addConverter(getStringToDocumentRelationshipConverter());
        registry.addConverter(getDocumentRevisionToStringConverter());
        registry.addConverter(getIdToDocumentRevisionConverter());
        registry.addConverter(getStringToDocumentRevisionConverter());
        registry.addConverter(getElectronicAddressToStringConverter());
        registry.addConverter(getIdToElectronicAddressConverter());
        registry.addConverter(getStringToElectronicAddressConverter());
        registry.addConverter(getKeyWordToStringConverter());
        registry.addConverter(getIdToKeyWordConverter());
        registry.addConverter(getStringToKeyWordConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
        registry.addConverter(getPostalAddressToStringConverter());
        registry.addConverter(getIdToPostalAddressConverter());
        registry.addConverter(getStringToPostalAddressConverter());
        registry.addConverter(getStreetDetailToStringConverter());
        registry.addConverter(getIdToStreetDetailConverter());
        registry.addConverter(getStringToStreetDetailConverter());
        registry.addConverter(getSummaryToStringConverter());
        registry.addConverter(getIdToSummaryConverter());
        registry.addConverter(getStringToSummaryConverter());
        registry.addConverter(getTelephoneNumberToStringConverter());
        registry.addConverter(getIdToTelephoneNumberConverter());
        registry.addConverter(getStringToTelephoneNumberConverter());
        registry.addConverter(getTitleToStringConverter());
        registry.addConverter(getIdToTitleConverter());
        registry.addConverter(getStringToTitleConverter());
        registry.addConverter(getTownDetailToStringConverter());
        registry.addConverter(getIdToTownDetailConverter());
        registry.addConverter(getStringToTownDetailConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
